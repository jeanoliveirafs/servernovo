version: '3.8'

services:
  # Aplicação Principal
  phantom-identity:
    build: .
    container_name: phantom-identity-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info
      - CORS_ORIGIN=*
      - SHARED_LINKS_CLEANUP_INTERVAL=1800000
      - MAX_SHARED_LINKS_PER_IP=10
      - PWA_CACHE_DURATION=31536000
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - shared_links_data:/app/shared-links
    depends_on:
      - redis
    networks:
      - phantom-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phantom.rule=Host(`seu-dominio.com`)"
      - "traefik.http.routers.phantom.tls=true"
      - "traefik.http.routers.phantom.tls.certresolver=letsencrypt"

  # Redis para Cache e Sessões
  redis:
    image: redis:7-alpine
    container_name: phantom-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - phantom-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: phantom-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - phantom-identity
    networks:
      - phantom-network
    labels:
      - "traefik.enable=false"

  # Prometheus para Métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: phantom-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    networks:
      - phantom-network

  # Grafana para Visualização
  grafana:
    image: grafana/grafana:latest
    container_name: phantom-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=phantom123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=seu-dominio.com
      - GF_SERVER_ROOT_URL=https://seu-dominio.com:3001
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - phantom-network

  # Redis Exporter para Métricas
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: phantom-redis-exporter
    restart: unless-stopped
    environment:
      - REDIS_ADDR=redis://redis:6379
    ports:
      - "9121:9121"
    depends_on:
      - redis
    networks:
      - phantom-network

  # Backup Automático
  backup:
    image: alpine:latest
    container_name: phantom-backup
    restart: "no"
    volumes:
      - ./logs:/backup/logs:ro
      - ./data:/backup/data:ro
      - redis_data:/backup/redis:ro
      - ./backups:/backups
    command: |
      sh -c "
        apk add --no-cache tar gzip &&
        cd /backup &&
        tar -czf /backups/phantom-backup-$(date +%Y%m%d-%H%M%S).tar.gz logs data redis &&
        find /backups -name '*.tar.gz' -mtime +7 -delete
      "
    profiles:
      - backup

networks:
  phantom-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  nginx_cache:
    driver: local
  shared_links_data:
    driver: local 